[project]
name = "workspace"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "gitpython>=3.1.44",
    "pydantic>=2.11.1",
    "rich>=13.9.4",
    "tomli>=2.2.1",
    "tomli-w>=1.2.0",
    "typer>=0.15.2",
    "mypy-extensions>=1.0.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "petname>=2.6",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.3.4",
]


[project.scripts]
workspace = "workspace.cli.main:app"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

# Ignore missing imports for specific modules
[[tool.mypy.overrides]]
module = ["git", "git.exc", "tomli", "tomli_w", "pytest"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false     # Allow missing function return types
disallow_incomplete_defs = false  # Allow missing parameter types
check_untyped_defs = false        # Disable type checking in untyped functions
ignore_missing_imports = true     # Ignore missing imports (including pytest)
disallow_untyped_decorators = false # Allow untyped decorators in tests

[tool.ruff]
target-version = "py311"
line-length = 100

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "RUF", # Ruff-specific rules
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["E501"]  # Allow long lines in tests

[tool.ruff.lint.isort]
known-first-party = ["workspace"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false
